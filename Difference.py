import PIL
import os
import os.path
from PIL import Image
import cv2
import numpy as np

def load_original_images_from_folder(folder):
    images = []
    for filename in os.listdir(folder):
        img = cv2.imread(os.path.join(folder,filename))
        #norm_img = img / (img.max() / 255.0)
        if img is not None:
            images.append(img)
    return images


def load_adv_images_from_folder(adv_folder):
    images = []
    for filename in os.listdir(adv_folder):
        img = cv2.imread(os.path.join(adv_folder,filename))
        #norm_img = img/(img.max()/255.0)
        if img is not None:
            images.append(img)
    return images



def noise(x,y):

    diff = cv2.subtract(np.float32(x), np.float32(y))
    for i in range(len(diff)):
        diff_norm = diff[i] / (diff[i].max() / 255.0)
        y_adv_malware = os.listdir("output/val/malware")
        cv2.imwrite("noise/malware/{}".format(y_adv_malware[i]), diff_norm)
        #print(diff.shape)
        print("noise saved")

folder="F:\\val\\result\\malware\\"
adv_folder="F:\\Work\\adv\\malware\\"
x = load_original_images_from_folder(folder)
y = load_adv_images_from_folder(adv_folder)
noise(x, y)



